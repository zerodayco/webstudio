.covers {
  height: 508px;
  background-repeat: no-repeat;
  background-size: cover;
  background-image: linear-gradient(rgba(46, 47, 66, 0.2),
      rgba(46, 47, 66, 0.2)), url("../img/covers/background-desktop.webp");
  background-size: 770px auto;
  background-position: 75% 45%;
  overflow: hidden;
}

.covers.container {
  padding: 0;
}

@media (min-resolution: 192dpi) {
  .covers {
    background-image: linear-gradient(rgba(46, 47, 66, 0.2),
        rgba(46, 47, 66, 0.2)), url("../img/covers/background-desktop@2x.webp");
    background-size: cover;
  }
}

@media only screen and (min-width: 768px) {
  .covers {
    height: 960px;
    background-image: linear-gradient(rgba(46, 47, 66, 0.2),
        rgba(46, 47, 66, 0.2)), url("../img/covers/background-desktop.webp");
    background-size: 1440px auto;
    background-position: 75% 35%;
  }

  @media (min-resolution: 192dpi) {
    .covers {
      background-image: linear-gradient(rgba(46, 47, 66, 0.2),
          rgba(46, 47, 66, 0.2)), url("../img/covers/background-desktop@2x.webp");
    }
  }
}


@media only screen and (min-width: 1440px) {
  .covers {
    background-image: linear-gradient(rgba(46, 47, 66, 0.2),
        rgba(46, 47, 66, 0.2)), url("../img/covers/background-desktop.webp");
  }

  @media (min-resolution: 192dpi) {
    .covers {
      background-image: linear-gradient(rgba(46, 47, 66, 0.2),
          rgba(46, 47, 66, 0.2)), url("../img/covers/background-desktop@2x.webp");
    }
  }
}


.marquee {
  position: relative;
  left: 0;
  overflow: hidden;
  height: 100%;
}

.marquee__inner {
  display: flex;
  transform: rotate(17deg);
}

.marquee__line {
  background-color: #FFDC00;
  flex-shrink: 0;
  margin-right: 20px;
  margin-bottom: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 282px;
  height: 162px;
  white-space: nowrap;
  animation-name: marqueeLine;
  animation-duration: 20s;
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;
}

@keyframes marqueeLine {
  from {
    transform: translateX(-0%);
  }

  to {
    transform: translateX(-180%);
  }
}